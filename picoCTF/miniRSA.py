import gmpy2
from Crypto.Util.number import long_to_bytes
from binascii import unhexlify
from decimal import *

# RSA 문제 중 "낮은 지수 공격"
# e 값이 매우 작고 n 값이 큰 경우 가능

n = 29331922499794985782735976045591164936683059380558950386560160105740343201513369939006307531165922708949619162698623675349030430859547825708994708321803705309459438099340427770580064400911431856656901982789948285309956111848686906152664473350940486507451771223435835260168971210087470894448460745593956840586530527915802541450092946574694809584880896601317519794442862977471129319781313161842056501715040555964011899589002863730868679527184420789010551475067862907739054966183120621407246398518098981106431219207697870293412176440482900183550467375190239898455201170831410460483829448603477361305838743852756938687673
e = 3

c = 2205316413931134031074603746928247799030155221252519872649649212867614751848436763801274360463406171277838056821437115883619169702963504606017565783537203207707757768473109845162808575425972525116337319108047893250549462147185741761825125

with localcontext() as ctx:
    ctx.prec = 3000
    m = gmpy2.iroot(c, e) # e가 3이라 세제곱근으로 하는 것! // cbrt로 하니까 왠지 안됨..
    print(m[0])
    print(long_to_bytes(m[0]))  # another way :  unhexlify(f'{int(m[0]):X}')
